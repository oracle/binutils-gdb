# Copyright 2007 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  

set testfile watchpoint-during-step
set srcfile ${testfile}.c
set binfile [standard_output_file ${testfile}]
if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable {debug}] != "" } {
    untested "Couldn't compile test program"
    return -1
}

# Get things started.

gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}

runto_main

gdb_breakpoint [gdb_get_line_number "var = 2"]
gdb_continue_to_breakpoint "Find the first var set"

gdb_test "step" ".*var = 3;" "Step to the next var set"

gdb_test "watch var" "atchpoint .*: var" "Set the watchpoint"

# Here is the target point.  Be careful to not have breakpoint set on the line
# we step from as in this case it is a valid upstream KFAIL gdb/38

gdb_test "step" ".*Old value = 2.*New value = 3.*" "Catch the watchpoint"
