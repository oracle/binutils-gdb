# This testcase is part of GDB, the GNU debugger.

# Copyright 2012 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

standard_testfile .c longest-types-64bit.S

proc test { name } { with_test_prefix $name {
    # 64-bit array size should not overflow
    gdb_test "print &f->buf" {= \(char \(\*\)\[1099494850560\]\) 0x0}

    # The offset should not overflow
    gdb_test "print &f->buf2" {= \(char \(\*\)\[2\]\) 0xffff000000}
}}


# Test 64-bit file first as it is not compiled so its compilation never fails.

set file64bitbz2uu ${srcdir}/${subdir}/${testfile}.bz2.uu
set file64bit [standard_output_file ${testfile}]

if {[catch "system \"uudecode -o - ${file64bitbz2uu} | bzip2 -dc >${file64bit}\""] != 0} {
    untested "failed uudecode or bzip2"
    return -1
}
file stat ${file64bit} file64bitstat
if {$file64bitstat(size) != 9501} {
    untested "uudecode or bzip2 produce invalid result"
    return -1
}

clean_restart ${file64bit}

#if { [prepare_for_testing ${testfile}.exp ${testfile} $srcfile2 {nodebug}] } {
#    return -1
#}

test "64bit"


# And here is the native build test.

if { [prepare_for_testing ${testfile}.exp ${testfile} $srcfile {debug quiet}] } {
    return -1
}

test "native"
