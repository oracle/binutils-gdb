#   Copyright 2006, 2007 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  

# Test unwinding fixes of the PPC platform, specifically on the coping with BCL
# jump of the PIE code.

if ![istarget "powerpc*-*-linux*"] then {
    verbose "Skipping powerpc-linux prologue tests."
    return
}

set testfile "powerpc-bcl-prologue"
set srcfile1 ${testfile}.c
set flags "debug"
if [istarget "powerpc-*"] then {
    set srcfile2 ${testfile}-asm32.S
    set flags "$flags additional_flags=-m32"
} elseif [istarget "powerpc64-*"] then {
    set srcfile2 ${testfile}-asm64.S
    set flags "$flags additional_flags=-m64"
} else {
   fail "powerpc arch test"
   return
}
set objfile2 [standard_output_file ${testfile}-asm.o]
set binfile [standard_output_file ${testfile}]

if { [gdb_compile "${srcdir}/${subdir}/${srcfile1} ${srcdir}/${subdir}/${srcfile2}" ${binfile} executable $flags] != ""} {
    return -1
}

gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}

# We should stop in abort(3).

gdb_run_cmd

gdb_test_multiple {} "continue to abort()" {
    -re ".*Program received signal SIGABRT,.*$gdb_prompt $" {
       pass "continue to abort()"
    }
}

# Check backtrace:
# #3  0x0804835f in func0 ()
# #4  0x0804836a in func1 ()
# #5  0x0804838c in main ()
# (gdb)
# `\\.?' prefixes are needed for ppc64 without `debug' (another bug).

set test "matching unwind"
gdb_test_multiple "backtrace" $test {
    -re "\r\n#\[0-9\]\[^\r\n\]* in \\.?func0 \\(\[^\r\n\]*\r\n#\[0-9\]\[^\r\n\]* in \\.?func1 \\(\[^\r\n\]*\r\n#\[0-9\]\[^\r\n\]* in \\.?main \\(\[^\r\n\]*\r\n$gdb_prompt $" {
	pass $test
    }
}
