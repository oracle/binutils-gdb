# Copyright 2009 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  

# Test PowerPC Power7 instructions disassembly.

if {![istarget "powerpc*-*-*"]} then {
    verbose "Skipping PowerPC Power7 instructions disassembly."
    return
}

set testfile "powerpc-power7rh"
set srcfile ${testfile}.s
set objfile [standard_output_file ${testfile}.o]

if { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${objfile}" object {debug}] != "" } {
    untested "PowerPC Power7 instructions disassembly"
    return -1
}


gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${objfile}
 

# Disassemble the function.

set test "disass func"
gdb_test_multiple $test $test {
    -re "\r\nDump of assembler code for function func:(\r\n.*\r\n)End of assembler dump.\r\n$gdb_prompt $" {
	set func $expect_out(1,string)
	pass $test
    }
}

proc instr_to_patt {offset instr} {
    # 0x0000000000000018 <func+24>:	stxvd2x vs43,r4,r5
    return ".*\r\n\[ \t\]*[string map {0x 0x0*} $offset] <(func)?\\+?\[0-9\]*>:\[ \t\]*[string map [list { } "\[ \t\]+" . {\.}] $instr]\[ \t\]*\r\n.*"
}

# KFAIL strings would not exist if -Many would print the same as -Mpower7.
# That means the power7 form should be the preferred one.
# http://sourceware.org/ml/gdb-patches/2009-03/threads.html#00020

proc func_check {offset instr {kfail ""}} {
    global func

    set test "Found $offset: $instr"
    if [regexp -nocase -line [instr_to_patt $offset $instr] $func] {
	pass $test
    } elseif {$kfail != "" && [regexp -nocase -line [instr_to_patt $offset $kfail] $func]} {
	kfail gdb/NNNN $test
    } else {
	fail $test
    }
}

func_check   0x0 "lxvd2x  vs3,r4,r5"
# [PATCH] Remove support for POWER7 VSX load/store with update instructions
# http://sourceware.org/ml/binutils/2009-09/msg00680.html
# http://sourceware.org/ml/binutils-cvs/2009-09/msg00331.html
func_check   0x4 "lxvb16x vs3,r4,r5"
func_check   0x8 "lxvd2x  vs43,r4,r5"
func_check   0xc "lxvb16x vs43,r4,r5"
func_check  0x10 "stxvd2x vs3,r4,r5"
func_check  0x14 "stxvb16x vs3,r4,r5"
func_check  0x18 "stxvd2x vs43,r4,r5"
func_check  0x1c "stxvb16x vs43,r4,r5"
func_check  0x20 "xxmrghd vs3,vs4,vs5"
func_check  0x24 "xxmrghd vs43,vs44,vs45"
func_check  0x28 "xxmrgld vs3,vs4,vs5"
func_check  0x2c "xxmrgld vs43,vs44,vs45"
func_check  0x30 "xxmrghd vs3,vs4,vs5"
func_check  0x34 "xxmrghd vs43,vs44,vs45"
func_check  0x38 "xxmrgld vs3,vs4,vs5"
func_check  0x3c "xxmrgld vs43,vs44,vs45"
func_check  0x40 "xxpermdi vs3,vs4,vs5,1"
func_check  0x44 "xxpermdi vs43,vs44,vs45,1"
func_check  0x48 "xxpermdi vs3,vs4,vs5,2"
func_check  0x4c "xxpermdi vs43,vs44,vs45,2"
func_check  0x50 "xvmovdp vs3,vs4"
func_check  0x54 "xvmovdp vs43,vs44"
func_check  0x58 "xvmovdp vs3,vs4"
func_check  0x5c "xvmovdp vs43,vs44"
func_check  0x60 "xvcpsgndp vs3,vs4,vs5"
func_check  0x64 "xvcpsgndp vs43,vs44,vs45"
func_check  0x68 "wait"
func_check  0x6c "wait"
func_check  0x70 "waitrsv"
func_check  0x74 "waitrsv"
func_check  0x78 "waitimpl"
func_check  0x7c "waitimpl"
func_check  0x80 "doze"
func_check  0x84 "nap"
func_check  0x88 "sleep"
func_check  0x8c "rvwinkle"
func_check  0x90 "prtyw   r3,r4"
func_check  0x94 "prtyd   r13,r14"
func_check  0x98 "mfcfar  r10"           "mfspr   r10,28"
func_check  0x9c "mtcfar  r11"           "mtspr   28,r11"
func_check  0xa0 "cmpb    r3,r4,r5"
func_check  0xa4 "lwzcix  r10,r11,r12"
func_check  0xa8 "dadd    f16,f17,f18"
func_check  0xac "daddq   f20,f22,f24"
func_check  0xb0 "dss     3"
func_check  0xb4 "dssall"
func_check  0xb8 "dst     r5,r4,1"
func_check  0xbc "dstt    r8,r7,0"
func_check  0xc0 "dstst   r5,r6,3"
func_check  0xc4 "dststt  r4,r5,2"
func_check  0xc8 "divwe   r10,r11,r12"
func_check  0xcc "divwe.  r11,r12,r13"
func_check  0xd0 "divweo  r12,r13,r14"
func_check  0xd4 "divweo. r13,r14,r15"
func_check  0xd8 "divweu  r10,r11,r12"
func_check  0xdc "divweu. r11,r12,r13"
func_check  0xe0 "divweuo r12,r13,r14"
func_check  0xe4 "divweuo. r13,r14,r15"
func_check  0xe8 "bpermd  r7,r17,r27"
func_check  0xec "popcntw r10,r20"
func_check  0xf0 "popcntd r10,r20"
func_check  0xf4 "ldbrx   r20,r21,r22"
func_check  0xf8 "stdbrx  r20,r21,r22"
func_check  0xfc "lfiwzx  f10,0,r10"
func_check 0x100 "lfiwzx  f10,r9,r10"
func_check 0x104 "fcfids  f4,f5"
func_check 0x108 "fcfids. f4,f5"
func_check 0x10c "fcfidus f4,f5"
func_check 0x110 "fcfidus. f4,f5"
func_check 0x114 "fctiwu  f4,f5"
func_check 0x118 "fctiwu. f4,f5"
func_check 0x11c "fctiwuz f4,f5"
func_check 0x120 "fctiwuz. f4,f5"
func_check 0x124 "fctidu  f4,f5"
func_check 0x128 "fctidu. f4,f5"
func_check 0x12c "fctiduz f4,f5"
func_check 0x130 "fctiduz. f4,f5"
func_check 0x134 "fcfidu  f4,f5"
func_check 0x138 "fcfidu. f4,f5"
func_check 0x13c "ftdiv   cr0,f10,f11"
func_check 0x140 "ftdiv   cr7,f10,f11"
func_check 0x144 "ftsqrt  cr0,f10"
func_check 0x148 "ftsqrt  cr7,f10"
func_check 0x14c "dcbtt   r8,r9"         "dcbt    16,r8,r9"
func_check 0x150 "dcbtstt r8,r9"         "dcbtst  16,r8,r9"
func_check 0x154 "dcffix  f10,f12"
func_check 0x158 "dcffix. f20,f22"
func_check 0x15c "lbarx   r10,r11,r12"
func_check 0x160 "lbarx   r10,r11,r12"
func_check 0x164 "lbarx   r10,r11,r12,1"
func_check 0x168 "lharx   r20,r21,r22"
func_check 0x16c "lharx   r20,r21,r22"
func_check 0x170 "lharx   r20,r21,r22,1"
func_check 0x174 "stbcx.  r10,r11,r12"
func_check 0x178 "sthcx.  r10,r11,r12"
func_check 0x17c "fre     f14,f15"
func_check 0x180 "fre.    f14,f15"
func_check 0x184 "fres    f14,f15"
func_check 0x188 "fres.   f14,f15"
func_check 0x18c "frsqrte f14,f15"
func_check 0x190 "frsqrte. f14,f15"
func_check 0x194 "frsqrtes f14,f15"
func_check 0x198 "frsqrtes. f14,f15"
func_check 0x19c "isel    r2,r3,r4,28"
