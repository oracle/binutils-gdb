# Copyright 2009 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

if ![istarget "x86_64-*-*"] then {
    verbose "Skipping over gdb.arch/x86_64-vla-pointer.exp test made only for x86_64."
    return
}

set testfile x86_64-vla-pointer
set srcasmfile ${testfile}-foo.S
set srcfile ${testfile}.c
set binfile [standard_output_file ${testfile}]
set binobjfile [standard_output_file ${testfile}-foo.o]
if  { [gdb_compile "${srcdir}/${subdir}/${srcasmfile}" "${binobjfile}" object {}] != "" } {
    untested "Couldn't compile test program"
    return -1
}
if  { [gdb_compile "${srcdir}/${subdir}/${srcfile} ${binobjfile}" "${binfile}" executable {}] != "" } {
    untested "Couldn't compile test program"
    return -1
}

gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}

if ![runto_main] {
    untested x86_64-vla-pointer
    return -1
}

gdb_breakpoint $srcfile:[gdb_get_line_number "break-here"]

gdb_continue_to_breakpoint "break-here"

gdb_test "whatis array" "type = array_t" "first: whatis array"
gdb_test "whatis array_t" "type = char \\\[variable length\\\]" "first: whatis array_t"
gdb_test "ptype array" "type = char \\\[26\\\]" "first: ptype array"

gdb_test "whatis *array" "type = char" "first: whatis *array"
gdb_test "ptype *array" "type = char" "first: ptype *array"

gdb_test "p array\[1\]" "\\$\[0-9\] = 1 '\\\\001'"
gdb_test "p array\[2\]" "\\$\[0-9\] = 2 '\\\\002'"
gdb_test "p array\[3\]" "\\$\[0-9\] = 3 '\\\\003'"
gdb_test "p array\[4\]" "\\$\[0-9\] = 4 '\\\\004'"

gdb_continue_to_breakpoint "break_here"

gdb_test "whatis array" "type = array_t" "second: whatis array"
gdb_test "whatis array_t" "type = char \\\[variable length\\\]" "second: whatis array_t"
gdb_test "ptype array" "type = char \\\[78\\\]" "second: ptype array"
